{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","console","log","input_data","$","data","ajaxSetup","beforeSend","xhr","settings","method","type","test","this","crossDomain","setRequestHeader","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","store","createStore","key","polotno_key","hasOwnProperty","activePage","loadJSON","JSON","parse","plan_json","dir","pages","id","setSize","style","display","height","width","onClick","hello","ajax","url","toDataURL","stringify","toJSON","done","resp","margin","flex","flexDirection","position","downloadButtonEnabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oWA6JeA,MAlJf,SAAaC,GACTC,QAAQC,IAAI,uBAEZ,IAAMC,EAAaC,IAAE,SAASC,KAAK,SAQnCJ,QAAQC,IAAI,cACZE,IAAEE,UAAU,CACRC,WAAY,SAAUC,EAAKC,GAP/B,IAAwBC,IAQID,EAASE,KANzB,6BAA6BC,KAAKF,IAMCG,KAAKC,cAExCb,QAAQC,IAAI,cACZM,EAAIO,iBAAiB,cAKjC,SAAmBC,GACf,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA6B,IAAnBD,SAASC,OAE5B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAIH,EAASf,IAAEoB,KAAKJ,EAAQE,IAE5B,GAAIH,EAAOM,UAAU,EAAGT,EAAKO,OAAS,IAAOP,EAAO,IAAM,CACtDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIZ,OAAON,EAlBqCU,CAAU,kBA2E1D,IAAMC,EAAQC,sBAAY,CACtBC,IAAKC,gBAsBT,OAnBA9B,QAAQC,IAAIC,GACRA,EAAWE,KAAK2B,eAAe,eAG/B/B,QAAQC,IAAI0B,EAAMK,YAGlBL,EAAMM,SAASC,KAAKC,MAAMjC,EAAWE,KAAKgC,YAC1CpC,QAAQqC,IAAIV,EAAMW,OAClBtC,QAAQC,IAAI0B,EAAMK,WAAWO,KAOjCZ,EAAMa,QAAQ,IAAK,KAKf,sBACIC,MAAO,CACHC,QAAS,OACTC,OAAQ,QACRC,MAAO,SAJf,UAOI,wBAAQC,QAtFhB,WACI7C,QAAQC,IAAIF,EAAM+C,OAElB9C,QAAQC,IAAI,gBAKPC,EAAWE,KAAK2B,eAAe,MAahC5B,IAAE4C,KAAK,CACHtC,OAAQ,OACRuC,IAAK,gBAAkB9C,EAAWE,KAAKmC,GAAK,IAC5CnC,KAAM,CACF,aAAgBuB,EAAMsB,YACtB,KAAQf,KAAKgB,UAAUvB,EAAMwB,aAElCC,MAAK,SAAUC,GACdrD,QAAQC,IAAIoD,MApBhBlD,IAAE4C,KAAK,CACHtC,OAAQ,OACRuC,IAAK,gBACL5C,KAAM,CACF,aAAgBuB,EAAMsB,YACtB,KAAQf,KAAKgB,UAAUvB,EAAMwB,aAElCC,MAAK,SAAUC,GACdrD,QAAQC,IAAIoD,OAqEhB,kBACA,qBAAKZ,MAAO,CAACG,MAAO,QAASD,OAAQ,OAAQD,QAAS,QAAtD,SACI,cAAC,IAAD,CAAWf,MAAOA,MAEtB,sBACIc,MAAO,CACHC,QAAS,OACTC,OAAQ,OACRW,OAAQ,OACRC,KAAM,EACNC,cAAe,SACfC,SAAU,YAPlB,UAUI,cAAC,IAAD,CAAS9B,MAAOA,EAAO+B,uBAAuB,IAC9C,cAAC,IAAD,CAAW/B,MAAOA,IAClB,cAAC,IAAD,CAAaA,MAAOA,WC3IrBgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrD,SAASsD,eAAe,SAM1BZ,M","file":"static/js/main.35a6a159.chunk.js","sourcesContent":["import './App.css';\nimport Toolbar from 'polotno/toolbar/toolbar';\nimport ZoomButtons from 'polotno/toolbar/zoom-buttons';\nimport SidePanel from 'polotno/side-panel/side-panel';\nimport Workspace from 'polotno/canvas/workspace';\nimport {createStore} from 'polotno/model/store';\nimport {polotno_key} from './Polotno_Key'\nimport {createDemoApp} from \"polotno/polotno-app\";\nimport $ from 'jquery';\n\n\nfunction App(props) {\n    console.log('starting the app...');\n\n    const input_data = $(\"#root\").data(\"props\");\n    //console.log(input_data.data.hello);\n    //console.dir(JSON.parse(input_data.data));\n    function csrfSafeMethod(method) {\n        // these HTTP methods do not require CSRF protection\n        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\n    }\n\n    console.log(\"ajax setup\");\n    $.ajaxSetup({\n        beforeSend: function (xhr, settings) {\n            if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n                // Only send the token to relative URLs i.e. locally.\n                console.log(\"ajax setup\");\n                xhr.setRequestHeader(\"X-CSRFToken\", getCookie('csrftoken'));\n            }\n        }\n    });\n\n    function getCookie(name) {\n        var cookieValue = null;\n        if (document.cookie && document.cookie != '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = $.trim(cookies[i]);\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) == (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    function clickSave() {\n        console.log(props.hello);\n        //console.dir(store);\n        console.log(\"clicked save\");\n        //console.log(store.toJSON());\n        //console.log(store.toDataURL());\n\n        // create new plan\n        if (!input_data.data.hasOwnProperty(\"id\")) {\n            $.ajax({\n                method: \"POST\",\n                url: \"/create_plan/\",\n                data: {\n                    \"image_base64\": store.toDataURL(),\n                    \"json\": JSON.stringify(store.toJSON())\n                }\n            }).done(function (resp) {\n                console.log(resp);\n            });\n        }else{\n            // update existing plan\n            $.ajax({\n                method: \"POST\",\n                url: \"/update/plan/\" + input_data.data.id + \"/\",\n                data: {\n                    \"image_base64\": store.toDataURL(),\n                    \"json\": JSON.stringify(store.toJSON())\n                }\n            }).done(function (resp) {\n                console.log(resp);\n            });\n        }\n\n\n    }\n\n\n    /*\n    const {store} = createDemoApp({\n        container: document.getElementById('root'),\n        // this is a demo key just for that project\n        // (!) please don't use it in your projects\n        // to create your own API key please go here: https://polotno.dev/cabinet\n        key: polotno_key,\n    });\n    return null\n\n     */\n\n    //store.setSize({width: 320, height: 240});\n    //store.setSize(320, 240);\n    //console.dir(store);\n\n\n    const store = createStore({\n        key: polotno_key, // you can create it here: https://polotno.dev/cabinet/\n    });\n\n    console.log(input_data);\n    if (input_data.data.hasOwnProperty(\"plan_json\")) {\n        //console.log(input_data.data.plan_json);\n\n        console.log(store.activePage);\n\n        // load page from context\n        store.loadJSON(JSON.parse(input_data.data.plan_json));\n        console.dir(store.pages);\n        console.log(store.activePage.id);\n\n\n    }\n\n\n    //store.setSize({width: 320, height: 240});\n    store.setSize(320, 240);\n    //store.addPage();\n\n    return (\n\n        <div\n            style={{\n                display: 'flex',\n                height: '100vh',\n                width: '100vw',\n            }}\n        >\n            <button onClick={clickSave}>Save</button>\n            <div style={{width: '400px', height: '100%', display: 'flex'}}>\n                <SidePanel store={store}/>\n            </div>\n            <div\n                style={{\n                    display: 'flex',\n                    height: '100%',\n                    margin: 'auto',\n                    flex: 1,\n                    flexDirection: 'column',\n                    position: 'relative',\n                }}\n            >\n                <Toolbar store={store} downloadButtonEnabled={true}/>\n                <Workspace store={store}/>\n                <ZoomButtons store={store}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}